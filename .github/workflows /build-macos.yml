name: Build Application

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install system dependencies
      run: |
        brew install pkg-config

    - name: Upgrade pip and install build tools
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade setuptools wheel
        pip install --upgrade build

    - name: Install Python dependencies from requirements.txt
      run: |
        pip install -r requirements.txt

    - name: Verify installations
      run: |
        python -c "from PyQt5 import QtCore; print('PyQt5 version:', QtCore.QT_VERSION_STR)"
        python -c "import playwright; print('Playwright installed successfully')"
        python -c "import bs4; print('BeautifulSoup installed successfully')"
        python -c "import pandas; print('Pandas installed successfully')"

    - name: Install Playwright browsers
      run: |
        playwright install chromium
        playwright install-deps

    - name: Create app bundle structure
      run: |
        mkdir -p dist/GoogleSearchParser.app/Contents/MacOS
        mkdir -p dist/GoogleSearchParser.app/Contents/Resources
        mkdir -p dist/GoogleSearchParser.app/Contents/Frameworks

    - name: Build application with PyInstaller
      run: |
        pyinstaller --onefile --windowed \
          --name GoogleSearchParser \
          --distpath dist \
          --workpath build \
          --specpath . \
          --hidden-import playwright \
          --hidden-import playwright.sync_api \
          --hidden-import playwright._impl \
          --hidden-import bs4 \
          --hidden-import pandas \
          --hidden-import PyQt5 \
          --hidden-import PyQt5.QtCore \
          --hidden-import PyQt5.QtGui \
          --hidden-import PyQt5.QtWidgets \
          --collect-all playwright \
          --exclude-module tkinter \
          --exclude-module matplotlib \
          --exclude-module numpy.tests \
          --exclude-module pandas.tests \
          --noconfirm \
          src/main.py

    - name: Copy Playwright browsers to app bundle
      run: |
        if [ -d "$HOME/Library/Caches/ms-playwright" ]; then
          cp -r "$HOME/Library/Caches/ms-playwright" dist/GoogleSearchParser.app/Contents/Resources/
        fi

    - name: Create Info.plist for proper macOS app
      run: |
        cat > dist/GoogleSearchParser.app/Contents/Info.plist << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
          <key>CFBundleExecutable</key>
          <string>GoogleSearchParser</string>
          <key>CFBundleIdentifier</key>
          <string>com.googlesearch.parser</string>
          <key>CFBundleName</key>
          <string>GoogleSearchParser</string>
          <key>CFBundleVersion</key>
          <string>1.0</string>
          <key>CFBundleShortVersionString</key>
          <string>1.0</string>
          <key>CFBundleInfoDictionaryVersion</key>
          <string>6.0</string>
          <key>CFBundlePackageType</key>
          <string>APPL</string>
          <key>LSMinimumSystemVersion</key>
          <string>10.14</string>
          <key>NSHighResolutionCapable</key>
          <true/>
        </dict>
        </plist>
        EOF

    - name: Make executable
      run: |
        chmod +x dist/GoogleSearchParser.app/Contents/MacOS/GoogleSearchParser

    - name: Create DMG (optional)
      run: |
        mkdir -p dist/dmg
        cp -r dist/GoogleSearchParser.app dist/dmg/
        hdiutil create -volname "GoogleSearchParser" -srcfolder dist/dmg -ov -format UDZO dist/GoogleSearchParser.dmg

    - name: Upload macOS build
      uses: actions/upload-artifact@v4
      with:
        name: GoogleSearchParser-macOS
        path: |
          dist/GoogleSearchParser.app
          dist/GoogleSearchParser.dmg
        retention-days: 30

    - name: Upload build logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs-macos
        path: |
          build/
          *.spec
        retention-days: 7

  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Upgrade pip and install build tools
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade setuptools wheel
        pip install --upgrade build

    - name: Install Python dependencies from requirements.txt
      run: |
        pip install -r requirements.txt

    - name: Verify installations
      run: |
        python -c "from PyQt5 import QtCore; print('PyQt5 version:', QtCore.QT_VERSION_STR)"
        python -c "import playwright; print('Playwright installed successfully')"
        python -c "import bs4; print('BeautifulSoup installed successfully')"
        python -c "import pandas; print('Pandas installed successfully')"

    - name: Install Playwright browsers
      run: |
        playwright install chromium
        playwright install-deps

    - name: Find chrome.exe for PyInstaller
      id: find_chrome
      run: |
        for /d %%i in ("%USERPROFILE%\AppData\Local\ms-playwright\chromium-*") do (
          if exist "%%i\chrome-win\chrome.exe" (
            echo ::set-output name=chrome_path::%%i\chrome-win\chrome.exe
            exit /b 0
          )
        )
      shell: cmd

    - name: Copy Playwright browsers to dist
      run: |
        if exist "%USERPROFILE%\AppData\Local\ms-playwright" (
          xcopy /E /I /Y "%USERPROFILE%\AppData\Local\ms-playwright" "dist\ms-playwright"
        )
      shell: cmd

    - name: Build application with PyInstaller
      run: |
        pyinstaller --onefile --windowed ^
          --name GoogleSearchParser ^
          --add-data "dist\ms-playwright;ms-playwright" ^
          --add-binary "%USERPROFILE%\AppData\Local\ms-playwright\chromium-*\chrome-win\chrome.exe;ms-playwright\chromium\chrome-win" ^
          --hidden-import playwright ^
          --hidden-import playwright.sync_api ^
          --hidden-import playwright._impl ^
          --hidden-import bs4 ^
          --hidden-import pandas ^
          --hidden-import PyQt5 ^
          --hidden-import PyQt5.QtCore ^
          --hidden-import PyQt5.QtGui ^
          --hidden-import PyQt5.QtWidgets ^
          --collect-all playwright ^
          --collect-all playwright._impl ^
          --exclude-module tkinter ^
          --exclude-module matplotlib ^
          --exclude-module numpy.tests ^
          --exclude-module pandas.tests ^
          --noconfirm ^
          src/main.py
      shell: cmd

    - name: Upload Windows build
      uses: actions/upload-artifact@v4
      with:
        name: GoogleSearchParser-windows
        path: |
          dist/GoogleSearchParser.exe
        retention-days: 30

    - name: Upload build logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs-windows
        path: |
          build/
          *.spec
        retention-days: 7
